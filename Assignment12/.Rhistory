setwd("E:/College/CL7/Assignment12")
dataset <- read.csv2("./BigMart_Train.csv", header = T, sep = ",")
dataset
summary(dataset)
setwd("E:/College/CL7/Assignment12")
wines <- read.csv2("../Datasets/winequality-red.csv", header = T, sep = ",")
summary(wines)
View(wines)
wines <- read.csv2("../Datasets/winequality-red.csv", header = T)
summary(wines)
View(wines)
names(wines)
columns <- colnames(names(wines)[~wines$quality])
attr <- drop("quality")
df <- wines[, !names(wines) %in% drop]
drop <- c("quality")
df <- wines[, !names(wines) %in% drop]
df
summary(df)
# Calculate coefficient of co-variance
cor(df)
# Dropping Quality from the dataset
drop <- c("quality")
temp_df <- wines[, !names(wines) %in% drop]
summary(temp_df)
setwd("E:/College/CL7/Assignment12")
wines <- read.csv2("../Datasets/winequality-red.csv", header = T)
summary(wines)
View(wines)
names(wines)
# Dropping Quality from the dataset
drop <- c("quality")
temp_df <- wines[, !names(wines) %in% drop]
summary(temp_df)
# Create a numeric dataset
attach(temp_df)
X <- cbind(names(temp_df))
cor(df)
cor(X)
# Create a numeric dataset
attach(temp_df)
X <- cbind(names(temp_df))
cor(X)
# Calculate coefficient of co-variance
is.na(temp_df)
# Calculate coefficient of co-variance
temp_df <- na.omit(temp_df)
setwd("E:/College/CL7/Assignment12")
wines <- read.csv2("../Datasets/wine.csv", header = T)
summary(wines)
View(wines)
wines <- read.csv("../Datasets/wine.csv", header = T)
summary(wines)
attach(wines)
X <- cbind(names(wines))
summary(x)
summary(X)
X <- cbind(names(wines))
X
cor(X)
setwd("E:/College/CL7/Assignment12")
WPCA <- princomp(winedf[, -1], cor = T, scores = T, covmat = NULL)
winedf <- read.csv("../Datasets/wine.csv")
WPCA <- princomp(winedf[, -1], cor = T, scores = T, covmat = NULL)
summary(WPCA)
plot(WPCA)
loadings(WPCA)
mydata<-read.csv('E:/College/CL7/Datasets/wine.csv')
summary(mydata)
View(mydata)
attach(mydata)
names(mydata)
X <- cbind(Wine,Alcohol,Ash,Malic.acid,Phenols)
summary(X)
# calculate coefficient of co-variance
cor(X)
# calculate for a part of dataset
attach(winedf)
X <- cbind(wine, Ash, Alcohol, Malic.acid, Phenols)
# calculate for a part of dataset
attach(winedf)
X <- cbind(wine, Ash, Alcohol, Malic.acid, Phenols)
X <- cbind(Wine, Ash, Alcohol, Malic.acid, Phenols)
cov(X)
Y <- cbind(names(winedf))
cov(Y)
is.numeric(Y)
is.numeric(winedf$Wine)
is.numeric(winedf$Alcohol)
is.numeric(winedf$Malic.acid)
is.numeric(winedf$Acl)
is.numeric(winedf$Mg)
is.numeric(winedf$Flavanoids)
is.numeric(winedf$Nonflavanoid.phenols)
is.numeric(winedf$Proanth)
is.numeric(winedf$Color.int)
is.numeric(winedf$Hue)
is.numeric(winedf$OD)
is.numeric(winedf$Proline)
X <- cbind(Wine, Ash, Alcohol, Malic.acid, Phenols, Flavanoids)
cov(X)
X <- cbind(Wine, Ash, Alcohol, Malic.acid, Phenols, Flavanoids, Hue)
cov(X)
plot(WPCA, t='l')
screeplot(WPCA, type="line", main="Scree plot")
plot(WPCA, t='l')
screeplot(WPCA, type="line", main="Scree plot")
loadings(WPCA)
plot(WPCA, t='l')
screeplot(WPCA, type="line", main="Scree plot")
#principal component analysis on given data matrix
pcal<-princomp(X, scores=TRUE, cor=TRUE)
summary(pcal)
summary(WPCA)
cov <- winedf[, -1]
cov(winedf[, -1])
summary(WPCA)
biplot(WPCA)
WPCA$scores[1:10, 1]
attributes(WPCA)
ev <- eigen(winedf)
ev <- eigen(WPCA)
head(winedf)
cov_matrix <- cov(winedf[, -1])
sum(diag(cov_matrix))
eigenvals <- eigen(cov_matrix)
eigenvals
eigenvals$vectors
for(a in eigenvals$values){
print(a / sum(eigenvals$values))
}
plot(eigenvals$values, xlab = "Eigenvalue number", ylab = "Eigenvalue size"
main = "Scree Graph")
lines(eigenvals$values)
plot(eigenvals$values, xlab = "Eigenvalue number", ylab = "Eigenvalue size",
main = "Scree Graph")
lines(eigenvals$values)
eigenvals$vectors
# Calculate Correlation of all attributes
cor_mat <- cor(winedf[, -1])
cor_mat
source('~/.active-rstudio-document')
# Checking the principal components of the dataset.
```{r}
WPCA <- princomp(winedf[, -1], cor = T, scores = T, covmat = NULL)
summary(WPCA)
```
## Plot the WPCA graph
